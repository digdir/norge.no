name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    name: Build and Run Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          STRAPI_API_URL: ${{ secrets.STRAPI_API_URL }}
          STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Dependencies (Frontend)
        run: |
          deno install

      - name: Build Frontend
        run: deno task frontend:build

  cms:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
          DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
          DATABASE_SSL: ${{ secrets.DATABASE_SSL }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies (CMS)
        run: |
          corepack enable pnpm
          cd apps/cms
          pnpm install

      - name: Build CMS
        run: |
          corepack enable pnpm
          cd apps/cms
          pnpm build